---------------------------------------------------------
                    Git Commands
---------------------------------------------------------

Configuring in a Git :-
        git config --global user.name "firstname lastname"
        git config --global user.email "email"

cd -
--------Switches to Previous directory

cd..
--------Switches to Parent Directory

cd~
--------Switches to home directory


ls
--------lists all the Folder and files in the Prsent Directory
ls -a
--------lists all the hidden files in the present directory


pwd
--------displays the present working directory


mkdir FolderName
--------Creates a folder

rm -rf FolderName
--------Delets a folder

touch FileName
--------Create a file

nano filename
--------opens a file

rm filename
--------delets a file

rm -i filename
--------Prompts for a confirmation to delete a file

cat filename
--------Displays the file content


For an error :- Fatal : Working Tree "..." Already Exists
	use command :- unset GIT_WORK_TREE
the above error occurs while trying to clone a repository



git clone url
--------clones the repository

git status
--------Displays the status of the repository (modified,untracked,staged,unmodified)


git add filename
--------Adds new or changed files in your working directory to the git staging area.

git add .
--------Adds all the modified and new files to the git staging area.

git commit -m "message"
--------It is the record of the change (Commits the Changes in the Local repository)


git push origin main
--------pushes the local comiited repo to remote repo

cp -r south_path destination_path
--------copying all the file from one folder to another folder



----------------------------------------------------------
		Initializing the git
----------------------------------------------------------

git init
--------Initializes the git to create a new empty repo in local machine

git add .

git commit -m "message"

git remote add origin url
--------adding a remote origin git link

git remote -v 
--------Vrifies the remote

git branch -M main
--------To set the main as a brach 

git branch
--------Shows "In which branch we are in"

git push -u origin main
--------pushes the file in the local repo to remote repo. 
        u stands for "upstream".
        When you use -u, Git remembers the branch you want to push to and the remote repository you want to push to by default.
        After setting the upstream branch, you can simply use 'git push' in the future without specifying the remote repository and the branch.

	'origin' - This is the default name Git gives to the remote repository from which the local repository was cloned.




--------------------------------------------------------
		   Branch Commands
--------------------------------------------------------


git branch
--------to check the branch

git branch -M main
--------to rename the branch

git checkout branch_name
--------To navigate to a branch

git checkout -b branch_name
--------To create a new branch

git branch -d branch_name
--------To delete a branch




---------------------------------------------------------
			Merging
---------------------------------------------------------

using merge commands


using PR - Pull request
It lets you tell others about changes you've pushed to the brnch in a repository on GitHub.

git pull origin main
--------used to fetch and download content from a remote repo and immediately update the local repo to match that content.

git diff branch_name
--------if we are in main branch and want check the difference with feature1 branch then we have to use 
	'git branch feature1'



---------------------------------------------------------
    To Undo staged changes (After using add command)
---------------------------------------------------------


git reset filename
--------can reste the file if the file is staged

git reset
--------can reset all the file if the files are staged




---------------------------------------------------------
  To undo commited changes (After using commit command)
---------------------------------------------------------

git reset HEAD~1
--------To undo the chnages for only one commit (The most recent one)

git reset commit_hash
--------To undo the changes for multiple commits (use git log to get the hash value)
	Changes can be seend only in remote repo.

git reset --hard commit_hash
--------To undo the changes for multiple commits (use git log to get the hash value)
        Changes can be seend in both remote and local repo.




---------------------------------------------------------
		      log Comand
---------------------------------------------------------

git log 
--------The git log command is used to view the history of a Git repository. It lists all the commits that have been made to the repository.

git log filename
--------To display the history of a specific file.

git log branchname
--------To display the history of a specific branch.

git log -n 10
--------To display the last 10 commits

git log -p
--------To display the diff for the most recent commit.

